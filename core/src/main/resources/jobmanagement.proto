syntax = "proto3";

package com.jalebi.proto;

service JobManagementProtocol {
    rpc registerExecutor (ExecutorRequest) returns (ExecutorResponse) {}
    rpc unregisterExecutor (ExecutorRequest) returns (ExecutorResponse) {}
    rpc startTalk (stream TaskResponse) returns (stream TaskRequest) {}
}

enum ExecutorState {
    NEW = 0;
    ALLOCATED = 1;
    REGISTERED = 2;
    RUNNING_JOB = 3;
    RUNNABLE = 4;
    UNREGISTERED = 5;
    ASSUMED_DEAD = 6;
}

enum DatasetState {
    NONE = 0;
    LOADING = 1;
    LOADED = 2;
}

enum TaskState {
    RUNNING = 0;
    COMPLETED = 1;
    FAILED = 2;
}

enum TaskType {
    LOAD_DATASET = 0;
    SEARCH_VERTEX = 1;
    BREADTH_FIRST = 2;
    DEPTH_FIRST = 3;
}

message ExecutorRequest {
    string executorId = 1;
}

message ExecutorResponse {
    int64 heartbeatInterval = 1;
    HostPort hostport = 2;
}

message TaskRequest {
    string jobId = 1;
    string taskId = 2;
    TaskType taskType = 3;
    int64 startVertexId = 4;
    string dataset = 5;
    repeated string parts = 6;
    int64 limit = 7;
}

message TaskResponse {
    string jobId = 1;
    string taskId = 2;
    TaskState taskState = 3;
    string executorId = 4;
    ExecutorState executorState = 5;
    DatasetState datasetState = 6;
    repeated VertexResult vertexResults = 7;
    repeated EdgeResult edgeResults = 8;
}

message VertexResult {
    int64 vertexId = 1;
    map<string, string> data = 2;
}

message EdgeResult {
    int64 sourceVertexId = 1;
    int64 targetVertexId = 2;
    map<string, string> data = 3;
}

message HostPort {
    string scheme = 1;
    string host = 2;
    int64 port = 3;
}