syntax = "proto3";

package com.jalebi.proto;

service JobManagementProtocol {
    rpc registerExecutor (ExecutorRequest) returns (ExecutorResponse) {}
    rpc unregisterExecutor (ExecutorRequest) returns (ExecutorResponse) {}
    rpc heartbeat (HeartbeatRequest) returns (HeartbeatResponse) {}
    rpc startTalk (stream TaskRequest) returns (stream TaskResponse) {}
}

enum ExecutorState {
    NEW = 0;
    REGISTERED = 1;
    RUNNING_JOB = 2;
    IDLE = 3;
    UNREGISTERED = 4;
    ASSUMED_DEAD = 5;
}

message ExecutorRequest {
    string executorId = 1;
}

message ExecutorResponse {
    int64 heartbeatInterval = 1;
}

message HeartbeatRequest {
    string executorId = 1;
    ExecutorState state = 2;
}

message HeartbeatResponse {
    string executorId = 1;
}

message TaskRequest {
    string jobID = 1;
    TaskOperation op = 2;
}

message TaskResponse {
    int64 epoch = 1;
}

enum TaskOperation {
    START_TASK = 0;
    STOP_TASK = 1;
    COMPUTE_NEXT_BATCH = 2;
}

enum Task {
    MORE_TO_DO = 0;
    I_AM_DONE = 1;
}