version 'unspecified'

apply plugin: 'java'
apply plugin: 'scala'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
//    configurations.all {
//        exclude module: 'slf4j-log4j12'
//    }
}
apply plugin: 'com.github.johnrengelman.shadow'

shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
        resource = 'reference.conf'
    }
}

dependencies {
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.12.3'
    compile group: 'org.scala-lang', name: 'scala-compiler', version: '2.12.3'
    testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.0'
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: '2.5.19'
    testCompile group: 'com.typesafe.akka', name: 'akka-testkit_2.12', version: '2.5.19'
    compile group: 'com.typesafe.akka', name: 'akka-remote_2.12', version: '2.5.19'
    testCompile group: 'com.typesafe.akka', name: 'akka-multi-node-testkit_2.12', version: '2.5.19'
    compile group: 'com.typesafe.akka', name: 'akka-slf4j_2.12', version: '2.5.19'

    compile group: 'org.apache.avro', name: 'avro', version: '1.8.2'
    compile group: 'com.sksamuel.avro4s', name: 'avro4s-core_2.12', version: '1.9.0'

    compile group: 'org.apache.hadoop', name: 'hadoop-common', version: '3.0.3'
    compile group: 'org.apache.hadoop', name: 'hadoop-hdfs-client', version: '3.0.3'
    compile group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '3.0.3'
    compile group: 'org.apache.hadoop', name: 'hadoop-yarn-client', version: '3.0.3'
    compile group: 'org.apache.hadoop', name: 'hadoop-yarn', version: '3.0.3'
}

task copyLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}

task fatJar(type: Jar) {
    classifier = 'all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task copyGraphJar(type: Copy) {
    from file("${buildDir}/libs/core.jar")
    into file("${projectDir}/publish/")
}