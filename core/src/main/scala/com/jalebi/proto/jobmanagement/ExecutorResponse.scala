// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.jalebi.proto.jobmanagement

@SerialVersionUID(0L)
final case class ExecutorResponse(
    heartbeatInterval: _root_.scala.Long = 0L,
    hostport: scala.Option[com.jalebi.proto.jobmanagement.HostPort] = None
    ) extends scalapb.GeneratedMessage with scalapb.Message[ExecutorResponse] with scalapb.lenses.Updatable[ExecutorResponse] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (heartbeatInterval != 0L) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, heartbeatInterval) }
      if (hostport.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(hostport.get.serializedSize) + hostport.get.serializedSize }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = heartbeatInterval
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      hostport.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.jalebi.proto.jobmanagement.ExecutorResponse = {
      var __heartbeatInterval = this.heartbeatInterval
      var __hostport = this.hostport
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __heartbeatInterval = _input__.readInt64()
          case 18 =>
            __hostport = Option(_root_.scalapb.LiteParser.readMessage(_input__, __hostport.getOrElse(com.jalebi.proto.jobmanagement.HostPort.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      com.jalebi.proto.jobmanagement.ExecutorResponse(
          heartbeatInterval = __heartbeatInterval,
          hostport = __hostport
      )
    }
    def withHeartbeatInterval(__v: _root_.scala.Long): ExecutorResponse = copy(heartbeatInterval = __v)
    def getHostport: com.jalebi.proto.jobmanagement.HostPort = hostport.getOrElse(com.jalebi.proto.jobmanagement.HostPort.defaultInstance)
    def clearHostport: ExecutorResponse = copy(hostport = None)
    def withHostport(__v: com.jalebi.proto.jobmanagement.HostPort): ExecutorResponse = copy(hostport = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = heartbeatInterval
          if (__t != 0L) __t else null
        }
        case 2 => hostport.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(heartbeatInterval)
        case 2 => hostport.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.jalebi.proto.jobmanagement.ExecutorResponse
}

object ExecutorResponse extends scalapb.GeneratedMessageCompanion[com.jalebi.proto.jobmanagement.ExecutorResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.jalebi.proto.jobmanagement.ExecutorResponse] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.jalebi.proto.jobmanagement.ExecutorResponse = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    com.jalebi.proto.jobmanagement.ExecutorResponse(
      __fieldsMap.getOrElse(__fields.get(0), 0L).asInstanceOf[_root_.scala.Long],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.jalebi.proto.jobmanagement.HostPort]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.jalebi.proto.jobmanagement.ExecutorResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.jalebi.proto.jobmanagement.ExecutorResponse(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[com.jalebi.proto.jobmanagement.HostPort]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = JobmanagementProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = JobmanagementProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.jalebi.proto.jobmanagement.HostPort
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.jalebi.proto.jobmanagement.ExecutorResponse(
  )
  implicit class ExecutorResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.jalebi.proto.jobmanagement.ExecutorResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.jalebi.proto.jobmanagement.ExecutorResponse](_l) {
    def heartbeatInterval: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.heartbeatInterval)((c_, f_) => c_.copy(heartbeatInterval = f_))
    def hostport: _root_.scalapb.lenses.Lens[UpperPB, com.jalebi.proto.jobmanagement.HostPort] = field(_.getHostport)((c_, f_) => c_.copy(hostport = Option(f_)))
    def optionalHostport: _root_.scalapb.lenses.Lens[UpperPB, scala.Option[com.jalebi.proto.jobmanagement.HostPort]] = field(_.hostport)((c_, f_) => c_.copy(hostport = f_))
  }
  final val HEARTBEATINTERVAL_FIELD_NUMBER = 1
  final val HOSTPORT_FIELD_NUMBER = 2
}
